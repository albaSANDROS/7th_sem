-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-09-18 18:19:59 MSK
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE branch (
    id                   INTEGER,
    place                VARCHAR2(4000),
    contact_phone        INTEGER,
    branch_id            NUMBER NOT NULL,
    employee_employee_id NUMBER
);

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_id );

CREATE TABLE client (
    id            INTEGER,
    full_name     VARCHAR2(4000),
    "e-mail"      INTEGER,
    contact_phone VARCHAR2(4000),
    client_id     NUMBER NOT NULL
);

ALTER TABLE client ADD CONSTRAINT client_pk PRIMARY KEY ( client_id );

CREATE TABLE "consists of" (
    repair_repair_id         NUMBER NOT NULL,
    spare_part_spare_part_id NUMBER NOT NULL
);

ALTER TABLE "consists of" ADD CONSTRAINT usedv1_pk PRIMARY KEY ( repair_repair_id,
                                                                 spare_part_spare_part_id );

CREATE TABLE employee (
    id          INTEGER,
    full_name   VARCHAR2(4000),
    position    VARCHAR2(4000),
    gender      VARCHAR2(1 CHAR),
    employee_id NUMBER NOT NULL
);

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id );

CREATE TABLE go_to (
    branch_branch_id NUMBER NOT NULL,
    client_client_id NUMBER NOT NULL
);

ALTER TABLE go_to ADD CONSTRAINT go_to_pk PRIMARY KEY ( branch_branch_id,
                                                        client_client_id );

CREATE TABLE made_by (
    repair_repair_id     NUMBER NOT NULL,
    employee_employee_id NUMBER NOT NULL
);

ALTER TABLE made_by ADD CONSTRAINT made_by_pk PRIMARY KEY ( repair_repair_id,
                                                            employee_employee_id );

CREATE TABLE made_byv1 (
    spare_part_spare_part_id NUMBER NOT NULL,
    type_type_id             NUMBER NOT NULL
);

ALTER TABLE made_byv1 ADD CONSTRAINT made_byv1_pk PRIMARY KEY ( spare_part_spare_part_id,
                                                                type_type_id );

CREATE TABLE "Order" (
    client_client_id NUMBER NOT NULL,
    repair_repair_id NUMBER NOT NULL
);

ALTER TABLE "Order" ADD CONSTRAINT order_pk PRIMARY KEY ( client_client_id,
                                                          repair_repair_id );

CREATE TABLE repair (
    id                 INTEGER,
    name               VARCHAR2(4000),
    cost               INTEGER,
    date_of_completion DATE,
    repair_id          NUMBER NOT NULL
);

ALTER TABLE repair ADD CONSTRAINT repair_pk PRIMARY KEY ( repair_id );

CREATE TABLE spare_part (
    id            INTEGER,
    "Number"      INTEGER,
    manufacturer  VARCHAR2(2 CHAR),
    code          VARCHAR2(4000),
    spare_part_id NUMBER NOT NULL
);

ALTER TABLE spare_part ADD CONSTRAINT spare_part_pk PRIMARY KEY ( spare_part_id );

CREATE TABLE type (
    id          INTEGER,
    description VARCHAR2(4000),
    category    VARCHAR2(4000),
    type_id     NUMBER NOT NULL
);

ALTER TABLE type ADD CONSTRAINT type_pk PRIMARY KEY ( type_id );

CREATE TABLE used (
    instrument               CHAR(1),
    name                     VARCHAR2(4000),
    code                     VARCHAR2(4000),
    repair_repair_id         NUMBER,
    spare_part_spare_part_id NUMBER
);

ALTER TABLE branch
    ADD CONSTRAINT branch_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE go_to
    ADD CONSTRAINT go_to_branch_fk FOREIGN KEY ( branch_branch_id )
        REFERENCES branch ( branch_id );

ALTER TABLE go_to
    ADD CONSTRAINT go_to_client_fk FOREIGN KEY ( client_client_id )
        REFERENCES client ( client_id );

ALTER TABLE made_by
    ADD CONSTRAINT made_by_employee_fk FOREIGN KEY ( employee_employee_id )
        REFERENCES employee ( employee_id );

ALTER TABLE made_by
    ADD CONSTRAINT made_by_repair_fk FOREIGN KEY ( repair_repair_id )
        REFERENCES repair ( repair_id );

ALTER TABLE made_byv1
    ADD CONSTRAINT made_byv1_spare_part_fk FOREIGN KEY ( spare_part_spare_part_id )
        REFERENCES spare_part ( spare_part_id );

ALTER TABLE made_byv1
    ADD CONSTRAINT made_byv1_type_fk FOREIGN KEY ( type_type_id )
        REFERENCES type ( type_id );

ALTER TABLE "Order"
    ADD CONSTRAINT order_client_fk FOREIGN KEY ( client_client_id )
        REFERENCES client ( client_id );

ALTER TABLE "Order"
    ADD CONSTRAINT order_repair_fk FOREIGN KEY ( repair_repair_id )
        REFERENCES repair ( repair_id );

ALTER TABLE used
    ADD CONSTRAINT used_repair_fk FOREIGN KEY ( repair_repair_id )
        REFERENCES repair ( repair_id );

ALTER TABLE used
    ADD CONSTRAINT used_spare_part_fk FOREIGN KEY ( spare_part_spare_part_id )
        REFERENCES spare_part ( spare_part_id );

ALTER TABLE "consists of"
    ADD CONSTRAINT usedv1_repair_fk FOREIGN KEY ( repair_repair_id )
        REFERENCES repair ( repair_id );

ALTER TABLE "consists of"
    ADD CONSTRAINT usedv1_spare_part_fk FOREIGN KEY ( spare_part_spare_part_id )
        REFERENCES spare_part ( spare_part_id );

CREATE SEQUENCE branch_branch_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER branch_branch_id_trg BEFORE
    INSERT ON branch
    FOR EACH ROW
    WHEN ( new.branch_id IS NULL )
BEGIN
    :new.branch_id := branch_branch_id_seq.nextval;
END;
/

CREATE SEQUENCE client_client_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER client_client_id_trg BEFORE
    INSERT ON client
    FOR EACH ROW
    WHEN ( new.client_id IS NULL )
BEGIN
    :new.client_id := client_client_id_seq.nextval;
END;
/

CREATE SEQUENCE employee_employee_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER employee_employee_id_trg BEFORE
    INSERT ON employee
    FOR EACH ROW
    WHEN ( new.employee_id IS NULL )
BEGIN
    :new.employee_id := employee_employee_id_seq.nextval;
END;
/

CREATE SEQUENCE repair_repair_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER repair_repair_id_trg BEFORE
    INSERT ON repair
    FOR EACH ROW
    WHEN ( new.repair_id IS NULL )
BEGIN
    :new.repair_id := repair_repair_id_seq.nextval;
END;
/

CREATE SEQUENCE spare_part_spare_part_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER spare_part_spare_part_id_trg BEFORE
    INSERT ON spare_part
    FOR EACH ROW
    WHEN ( new.spare_part_id IS NULL )
BEGIN
    :new.spare_part_id := spare_part_spare_part_id_seq.nextval;
END;
/

CREATE SEQUENCE type_type_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER type_type_id_trg BEFORE
    INSERT ON type
    FOR EACH ROW
    WHEN ( new.type_id IS NULL )
BEGIN
    :new.type_id := type_type_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             24
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
