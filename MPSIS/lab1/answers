1. Принстонская ортогональная RISC архитектура
Принстонская архитектура, предусматривает хранение программ в общей памяти с данными.
RISC (Reduced Instruction Set Computing) – вычисления с сокращѐнным набором команд. 
Принстонская - принцип хранения данных и инструкций в одной памяти.
Ортогональная - при которой каждая команда пригодна для каждого режима адресации.


2. Что такое пин и порт?
Пин – это конкретная нога микроконтроллера, имеющая свой номер, по которому к ней можно обратиться. 
Порт – это совокупность пинов. 
PxIN и PxOUT содержат в себе состояние пинов порта. Устанавливая ноль или единицу в регистр PxOUT мы меняем напряжение на лапке микроконтроллера, 
тем самым включая и выключая светодиод. 

3. Для чего нужны регистры PxIN и PxOUT?
PxIN  (чтение) – каждый бит регистра отражает величину входного сигнала на соответствующей ножке (пине) ввода/вывода, когда она сконфигурирована на функцию ввода/вывода;
PxOUT (запись) – каждый бит в регистре содержит значение, которое будет выведено на соответствующую ножку ввода/вывода, сконфигурированную на функцию ввода/вывода и имеющую направление на вывод;
PxDIR – каждый бит в регистре позволяет независимо от выбранной для этой ножки функции (ввод/вывод или периферия) выбрать направление соответствующей ножки: 0 – вход, 1 – выход;
PxREN – каждый бит в регистре включает или отключает подтягивающий резистор соответствующего ножки ввода / вывода.;
PxSEL – выбор функции вывода: 0 – I/O, 1 – периферия;
PxIES – каждый бит в регистре определяет направление перепада для генерации запроса на прерывание: 0 – по фронту, 1 – по спаду;
PxIFG – каждый бит в регистре соответствует флагу запроса на прерывание по соответствующей линии ввода/вывода.
PxIE - разрешение прерывания.

4. Что такое прерывание?
Прерывание — сигнал от программного или аппаратного обеспечения, сообщающий процессору о наступлении какого-либо события, требующего немедленного внимания.

Вектор прерывания — закреплённый за устройством номер, который идентифицирует соответствующий обработчик прерываний.
Векторы прерываний объединяются в таблицу векторов прерываний, содержащую адреса обработчиков прерываний. Местоположение таблицы зависит от типа и режима работы процессора.

Различают следующие виды прерываний:
- системные немаскируемые (сигнал RST/NMI в режиме NMI, сигнал от сторожевого таймера, сбой тактового генератора, ошибка доступа Flash-памяти);
- пользовательские немаскируемые (сбой напряжения питания от PMM, доступ к несуществующей памяти, события буфера JTAG);
- маскируемые прерывания (генерируются периферийными модулями).
Маскируемые прерывания могут быть отключены (замаскированы) индивидуально или все сразу (бит GIE регистра состояния SR).

Микроконтроллер имеет следующую структуру прерываний:
- векторные прерывания без необходимости опроса;
- векторы прерываний расположены вниз от адреса 0FFFEh.

5. Порядок обработки запроса на прерывание в MSP430.
При возникновении прерываний выполняются следующие действия:
1. Завершается выполнение текущей инструкции.
2. Счетчик команд PC, указывающий на следующую инструкцию, сохраняется в стеке;
3. Регистр состояния SR сохраняется в стеке.
4. Выбирается прерывание с наивысшим приоритетом.
5. Сбрасывается флаг запроса на прерывания, если данному вектору соответствует единственному источник. 
Если источников несколько, флаг завтра на прерывание необходимо сбрасывать программно.
6. Все биты регистра состояния SR кроме SCG0 сбрасываются в 0; т.к. бит GIE = 0 маскируемые прерывания запрещаются.
7. В счетчик команд PC загружается содержимое выбранного вектора прерывания.

6. Особенности архитектуры микроконтроллера MSP430
- 16-тиразрядная RISC архитектура;
- ортогональная архитектура, при которой каждая команда пригодна для каждого режима адресации;
- 27 основных команд + 24 эмулированных;
- 7 согласованных способов адресации;
- полный доступ ко всем регистрам, включая счетчик команд, регистр состояния, и указатель стека;
- генератор шести основных констант;
- однотактные регистровые операции;
- большой размер регистрового файла, уменьшающий количество обращений к памяти (16 регистров = 4 специальных + 12 РОН);
- 20-битная шина адреса, 16-битная шина данных;
- Фон-Неймановская адресная шина общей памяти и шина данных памяти;
- пересылки память-память без промежуточного сохранения в регистре.

7. watchdog timer
Сторожевой таймер, реже контрольный таймер — аппаратно реализованная схема контроля над зависанием системы. 
Представляет собой таймер, который периодически сбрасывается контролируемой системой. 
Если сброса не произошло в течение некоторого интервала времени, происходит принудительная перезагрузка системы
